name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            build_cmd: npm run build-win64
            artifact: dist/soracom-button-Setup-${{ steps.version.outputs.version }}_win64.exe
            src: build/win-unpacked/soracom-button Setup.exe
            rename: soracom-button-Setup-${{ steps.version.outputs.version }}_win64.exe
          - os: windows-latest
            build_cmd: npm run build-win32
            artifact: dist/soracom-button-Setup-${{ steps.version.outputs.version }}_win32.exe
            src: build/win-ia32-unpacked/soracom-button Setup.exe
            rename: soracom-button-Setup-${{ steps.version.outputs.version }}_win32.exe
          - os: macos-latest
            build_cmd: npm run build-mac
            artifact: dist/soracom-button-Setup-${{ steps.version.outputs.version }}.dmg
            src: build/mac/*.dmg
            rename: soracom-button-Setup-${{ steps.version.outputs.version }}.dmg

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Get version
        id: version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build
        run: ${{ matrix.build_cmd }}

      - name: Find built file and rename
        shell: bash
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            src_file=$(ls build/mac/*.dmg | head -n 1)
          else
            src_file="${{ matrix.src }}"
          fi
          cp "$src_file" "dist/${{ matrix.rename }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rename }}
          path: dist/${{ matrix.rename }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*/soracom-button-Setup-*.exe
            dist/*/soracom-button-Setup-*.dmg

