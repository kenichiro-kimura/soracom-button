name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            build_cmd: npm run publish-win64
          - os: windows-latest
            build_cmd: npm run publish-win32
          - os: macos-latest
            build_cmd: npm run publish-mac

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: kenichiro-kimura/libsoratun
          path: libsoratun 
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.2
      - name: build libsoratun
        run: |
          cd libsoratun
          make libs
          cd ..
          mkdir dist
          cp libsoratun/lib/shared/libsoratun.* dist/
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22         
      - name: Install dependencies
        run: npm ci
      
      # Download azure signing tool(Windows only)
      - name: Download AzureSignTool
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p tools
          Invoke-WebRequest -Uri "https://github.com/vcsjones/AzureSignTool/releases/download/v6.0.1/AzureSignTool-x64.exe" -OutFile "tools/AzureSignTool-x64.exe"
      
      - name: Build Electron App
        run: ${{ matrix.build_cmd }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Windows向けビルドに署名
      - name: Sign Windows executable
        if: matrix.os == 'windows-latest'
        run: |
          $distFolder = if ("${{ matrix.build_cmd }}" -eq "npm run publish-win64") { "dist/win-unpacked" } else { "dist/win-ia32-unpacked" }
          tools/AzureSignTool-x64.exe sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}" -kvs "${{ secrets.AZURE_SIGNING_SECRET }}" -kvc "${{ secrets.AZURE_CERT_NAME }}" -tr http://timestamp.digicert.com -td "sha256" -fd "sha256" -ph -v "dist/soracom-button*.exe"
      
      # 署名済みファイルのリリース処理
      - name: Publish Release
        run: |
          if ("${{ matrix.os }}" -eq "windows-latest") {
            $arch = if ("${{ matrix.build_cmd }}" -eq "npm run publish-win64") { "x64" } else { "ia32" }
            npx electron-builder --win --$arch --publish always
          }
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
